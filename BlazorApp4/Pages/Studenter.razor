@page "/students"
@inject Studenter.IStudentO StudentService

 
<PageTitle>Studenter</PageTitle>
<h1>Studenter</h1>
 
<p>Den här sidan listar alla studenter.</p>
<p role="status">@StudentService.GetRandomStudent()</p>

<ul>
    @foreach (var student in studentLista)
    {
<li>
            @student.Namn (@student.Betyg) - @student.Points poäng
<button class="btn btn-sm btn-danger" @onclick="() => RemoveStudent(student)">Ta bort</button>
</li>
    }
</ul>
 
<h3>Lägg till ny student</h3>
 
<input @bind="newStudent.Namn" placeholder="Namn" />
<input @bind="newStudent.Betyg" placeholder="Betyg" />
<input type="number" @bind="newStudent.Points" placeholder="Poäng" />
<button class="btn btn-sm btn-success" @onclick="AddStudent">Lägg till</button>
 
@code {
    
    public class Student
    {
        public string Namn { get; set; } = "";
        public string Betyg { get; set; } = "";
        public decimal Points { get; set; }
    }
 
    private List<Student> studentLista = new()
    {
        new() { Namn = "Markus", Betyg = "E", Points = 1000 },
        new() { Namn = "Sajad", Betyg = "C", Points = 1300 },
        new() { Namn = "Pelle", Betyg = "A", Points = 1500 },
        new() { Namn = "Rikard", Betyg = "E", Points = 1000 },
        new() { Namn = "Elias", Betyg = "C", Points = 1300 },
        new() { Namn = "Elin", Betyg = "A", Points = 1500 },
        new() { Namn = "Lovisa", Betyg = "E", Points = 1000 },
        new() { Namn = "Sara", Betyg = "C", Points = 1300 },
        new() { Namn = "Cecilia", Betyg = "A", Points = 1500 },
        new() { Namn = "Ebba", Betyg = "E", Points = 1000 },
    };
 
    private Student newStudent = new Student();
 
    private void RemoveStudent(Student student)
    {
        studentLista.Remove(student);
    }

    private void AddStudent()
    {
        if (!string.IsNullOrWhiteSpace(newStudent.Namn))
        {
            studentLista.Add(new Student
            {
                Namn = newStudent.Namn,
                Betyg = newStudent.Betyg,
                Points = newStudent.Points
            });


            newStudent = new Student();
        }
    }
    
    public interface IStudentO
            {
                string GetRandomStudent();
            }

            public class RandomStudents : IStudentO
            {
                private readonly string[] _student =
                {
                    "Markus",
                    "Sajad",
                    "Pelle",
                    "Rikard",
                    "Elias",
                    "Elin",
                    "Lovisa",
                    "Sara",
                    "Cecilia",
                    "Ebba",
                };

                public string GetRandomStudent()
                {
                    var random = new Random();
                    return _student[random.Next(_student.Length)];
                }
                
            }
            
        }
    }
}